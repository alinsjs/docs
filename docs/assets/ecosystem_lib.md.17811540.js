import{_ as e,o as i,c as t,S as a}from"./chunks/framework.cd7b584e.js";const f=JSON.parse('{"title":"Peripheral tools","description":"","frontmatter":{},"headers":[],"relativePath":"ecosystem/lib.md","filePath":"ecosystem/lib.md"}'),l={name:"ecosystem/lib.md"},r=a('<h1 id="peripheral-tools" tabindex="-1">Peripheral tools <a class="header-anchor" href="#peripheral-tools" aria-label="Permalink to &quot;Peripheral tools&quot;">​</a></h1><p>Alins is currently in its infancy and the library of tools is under development, if you are interested, developers are welcome to participate:</p><p>There are currently the following plans:</p><ol><li><a href="https://github.com/alinsjs/alins-router" target="_blank" rel="noreferrer">alins-router</a>: Routing library</li><li><a href="https://github.com/alinsjs/alins-v" target="_blank" rel="noreferrer">alins-v</a>: Form validation library</li><li><a href="https://github.com/alinsjs/alins-ui" target="_blank" rel="noreferrer">alins-ui</a>: UI library (based on material design or antd)</li><li><a href="https://github.com/alinsjs/alins-style" target="_blank" rel="noreferrer">alins-style</a>: The complete css-in-js scheme</li><li><a href="https://github.com/alinsjs/alins-ssr" target="_blank" rel="noreferrer">alins-ssr</a>: Server-side rendering</li><li><a href="https://github.com/alinsjs/alins-html" target="_blank" rel="noreferrer">alins-html</a>: Template compilation scheme support, based on HTML files and syntax, closest to HTML semantics</li><li><a href="https://github.com/alinsjs/alins-vsc" target="_blank" rel="noreferrer">alins-vsc</a>: The Alins vscode plugin supports some syntax highlighting and IntelliSense that JSX does not support, such as $item and custom items in the For component. alins-html IntelliSense</li><li><a href="https://github.com/alinsjs/alins-animate" target="_blank" rel="noreferrer">alins-animate</a>: Animation support</li><li><a href="https://github.com/alinsjs/alins-use" target="_blank" rel="noreferrer">alins-use</a>: A collection of tools</li><li><a href="https://github.com/alinsjs/alins-term" target="_blank" rel="noreferrer">alins-term</a>: A custom nodejs renderer implements a terminal drawing UI</li><li><a href="https://github.com/alinsjs/alins-term" target="_blank" rel="noreferrer">alins-canvas</a>: Custom canvas renderer implements canvas-based drawing UI</li><li><a href="https://github.com/alinsjs/alins-native" target="_blank" rel="noreferrer">alins-native</a>: Implement a cross-end scheme based on alins</li></ol><h2 id="next-version-todo" tabindex="-1">Next Version TODO <a class="header-anchor" href="#next-version-todo" aria-label="Permalink to &quot;Next Version TODO&quot;">​</a></h2><ul><li>[ ] alins-router - official routing library (as generic as possible, able to use native js calls directly)</li><li>[ ] alins-ui - Official UI library</li><li>[ ] alins-style style tag optimization to improve CSS usability, style value type declarations (can be used with the reactive library with native js)</li><li>[ ] alins-style supports compatibility extensions</li><li>[ ] alins-ssr - server-side rendering (as generic as possible, able to use native js calls directly)</li><li>[ ] Add @reactive for variable declarations and function parameters, add @static comments</li><li>[ ] For supports deconstruction</li><li>[ ] For Object support</li><li>[ ] source-map support</li><li>[ ] Compiler code refactoring - Compile in two steps The first step is JSX parsing; The second part carries out alins reactivation; SSR is supported</li><li>[ ] Runtime code refactoring - Optimized memory footprint and run time</li><li>[ ] Perfect test</li><li>[ ] Branch memory usage issues</li><li>[ ] For type hint</li><li>[ ] Async Data type annotation</li><li>[ ] alins-vsc</li><li>[ ] Move DOM elements when sorting large lists to optimize performance</li><li>[ ] Template syntax supports HTML files as the template language</li><li>[ ] computed refactoring; dirty tag. Optimize const b = a++; logic</li></ul>',6),s=[r];function n(o,c,p,h,m,d){return i(),t("div",null,s)}const b=e(l,[["render",n]]);export{f as __pageData,b as default};
