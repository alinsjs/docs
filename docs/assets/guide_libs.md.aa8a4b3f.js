import{_ as e,o as r,c as a,S as t}from"./chunks/framework.cd7b584e.js";const p=JSON.parse('{"title":"Tool Link","description":"","frontmatter":{},"headers":[],"relativePath":"guide/libs.md","filePath":"guide/libs.md"}'),l={name:"guide/libs.md"},i=t('<h1 id="tool-link" tabindex="-1">Tool Link <a class="header-anchor" href="#tool-link" aria-label="Permalink to &quot;Tool Link&quot;">â€‹</a></h1><p>The tool link is currently under development and will be available soon. Interested developers are also welcome to participate. Currently, we have the following plans:</p><ol><li><a href="https://github.com/alinsjs/alins-router" target="_blank" rel="noreferrer">alins-router</a>: routing library</li><li><a href="https://github.com/alinsjs/alins-v" target="_blank" rel="noreferrer">alins-v</a>: form verification library</li><li><a href="https://github.com/alinsjs/alins-ui" target="_blank" rel="noreferrer">alins-ui</a>: UI library (based on material design or antd)</li><li><a href="https://github.com/alinsjs/alins-style" target="_blank" rel="noreferrer">alins-style</a>: Complete css-in-js solution</li><li><a href="https://github.com/alinsjs/alins-ssr" target="_blank" rel="noreferrer">alins-ssr</a>: Server-side rendering</li><li><a href="https://github.com/alinsjs/alins-term" target="_blank" rel="noreferrer">alins-term</a>: Custom nodejs renderer to implement terminal customization UI</li><li><a href="https://github.com/alinsjs/alins-term" target="_blank" rel="noreferrer">alins-canvas</a>: Customize canvas renderer to implement terminal drawing UI based on canvas</li></ol>',3),n=[i];function s(o,c,h,d,m,_){return r(),a("div",null,n)}const b=e(l,[["render",s]]);export{p as __pageData,b as default};
