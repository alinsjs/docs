import{_ as e,o as a,c as t,S as r}from"./chunks/framework.cd7b584e.js";const b=JSON.parse('{"title":"Tool link","description":"","frontmatter":{},"headers":[],"relativePath":"guide/libs.md","filePath":"guide/libs.md"}'),l={name:"guide/libs.md"},i=r('<h1 id="tool-link" tabindex="-1">Tool link <a class="header-anchor" href="#tool-link" aria-label="Permalink to &quot;Tool link&quot;">â€‹</a></h1><p>The tool link is currently under development and will be available soon. Interested developers are also welcome to participate. Currently, we have the following plans:</p><ol><li><a href="https://github.com/alinsjs/alins-router" target="_blank" rel="noreferrer">alins-router</a>: routing library</li><li><a href="https://github.com/alinsjs/alins-v" target="_blank" rel="noreferrer">alins-v</a>: form verification library</li><li><a href="https://github.com/alinsjs/alins-ui" target="_blank" rel="noreferrer">alins-ui</a>: UI library (based on material design or antd)</li><li><a href="https://github.com/alinsjs/alins-style" target="_blank" rel="noreferrer">alins-style</a>: Complete css-in-js solution</li><li><a href="https://github.com/alinsjs/alins-ssr" target="_blank" rel="noreferrer">alins-ssr</a>: Server-side rendering</li><li><a href="https://github.com/alinsjs/alins-html" target="_blank" rel="noreferrer">alins-html</a>: template compilation solution support, based on html files and syntax, closest to html semantics</li><li><a href="https://github.com/alinsjs/alins-vsc" target="_blank" rel="noreferrer">alins-vsc</a>: Alins vscode plug-in supports syntax highlighting and smart prompts that are not supported by some jsx, such as $item and customization in the For component item</li><li><a href="https://github.com/alinsjs/alins-animate" target="_blank" rel="noreferrer">alins-animate</a>: animation support</li><li><a href="https://github.com/alinsjs/alins-use" target="_blank" rel="noreferrer">alins-use</a>: Tool collection</li><li><a href="https://github.com/alinsjs/alins-term" target="_blank" rel="noreferrer">alins-term</a>: Custom nodejs renderer to implement terminal drawing UI</li><li><a href="https://github.com/alinsjs/alins-term" target="_blank" rel="noreferrer">alins-canvas</a>: Custom canvas renderer implements drawing UI based on canvas</li><li><a href="https://github.com/alinsjs/alins-native" target="_blank" rel="noreferrer">alins-native</a>: Implement cross-platform solution based on alins</li></ol>',3),s=[i];function n(o,h,m,c,p,u){return a(),t("div",null,s)}const _=e(l,[["render",n]]);export{b as __pageData,_ as default};
