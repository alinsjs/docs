import{_ as p,E as t,o as e,c,J as a,k as s,a as l,S as o}from"./chunks/framework.cd7b584e.js";const j=JSON.parse('{"title":"Computed Properties","description":"","frontmatter":{},"headers":[],"relativePath":"guide/computed.md","filePath":"guide/computed.md"}'),r={name:"guide/computed.md"},D=s("h1",{id:"computed-properties",tabindex:"-1"},[l("Computed Properties "),s("a",{class:"header-anchor",href:"#computed-properties","aria-label":'Permalink to "Computed Properties"'},"​")],-1),F=s("p",null,"Variables that rely on reactive data will be marked as calculated data. Calculated data is read-only by default. You can also set the assignment behavior of calculated data through the set syntax, which will be introduced in detail in subsequent chapters.",-1),y=s("p",null,"Calculated data is also responsive data. When the responsive data on which the calculated data depends changes, the calculated data will also trigger updates and trigger updates for other elements that depend on it.",-1),C=s("p",null,"The definition form of calculated properties is very flexible and can be js expressions, functions, objects, etc. At the same time, calculated properties are very easy to understand and are completely consistent with the use of js.",-1),i=s("h2",{id:"_1-js-expressions-and-functions",tabindex:"-1"},[l("1. js expressions and functions "),s("a",{class:"header-anchor",href:"#_1-js-expressions-and-functions","aria-label":'Permalink to "1. js expressions and functions"'},"​")],-1),A=o("",3),d=o("",1);function u(h,_,g,b,m,v){const n=t("CodeBox");return e(),c("div",null,[D,F,y,C,i,a(n),A,a(n),d])}const x=p(r,[["render",u]]);export{j as __pageData,x as default};
